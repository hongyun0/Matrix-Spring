<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matrix.spring.user.UserMapper">
	<insert id="addUser"
		parameterType="com.matrix.spring.user.UserDTO">
		insert into users
		(user_id, pw, phone_num, name, birth,
		gender, email, address_city, address_gu,
		address_dong, status,
		profile_photo)
		values ( #{userId}, #{pw}, #{phoneNum}, #{name},
		#{birthYear}||#{birthMonth}||#{birthDay}, #{gender},
		#{emailAccount}||'@'||#{emailDomain}, #{addressCity}, #{addressGu},
		#{addressDong}, 1, #{profilePhoto})
	</insert>

	<select id="login" resultType="String">
		select user_id from users 
		where user_id=#{userId} 
		and	pw=#{pw}
	</select>

	<select id="isUserPhoneNum" parameterType="String"
		resultType="String">
		select phone_num
		from users
		where phone_num= #{phoneNum}
	</select>

	<select id="isUserId" parameterType="String" resultType="String">
		select
		user_id
		from users
		where user_id = #{userId}
	</select>

	<select id="getUserIdByPhoneNum" parameterType="String" resultType="String">
		select user_id
		from users
		where phone_num=#{phoneNum}
	</select>

	<select id="getUserPhoneNum" parameterType="String"
		resultType="String">
		select phone_num
		from users
		where user_id=#{userId}
	</select>

	<select id="getUserInfo" parameterType="String"
		resultType="java.util.Map">
		select name, to_char(birth, 'yyyy/mm/dd') as birth, email,
		address_city, address_gu, address_dong, phone_num, profile_photo
		from
		users
		where user_id=#{userId}
	</select>

	<select id="getAdminSlideInfo" parameterType="String"
		resultType="java.util.Map">
		select u.profile_photo, b.branch_name, u.name
		from users u, admins a, branches b
		where u.user_id= #{userId}
		and u.user_id=a.admin_id
		and a.branch_seq=b.branch_seq
	</select>

	<select id="getStaffSlideInfo" parameterType="String"
		resultType="java.util.Map">
		select u.profile_photo, b.branch_name, u.name
		from users u,
		staffs s, branches b
		where u.user_id= #{userId}
		and u.user_id=s.staff_id
		and s.branch_seq=b.branch_seq
	</select>

	<select id="getUsers" resultType="String">
		select user_id
		from users
		where
		status=1
	</select>

	<select id="isCertifiedAdmin" parameterType="String"
		resultType="java.util.Map">
		select branch_seq, admin_seq
		from admins
		where
		admin_id=#{userId}
		and approve_date is not null
		and revoke_date is null
	</select>

	<select id="isCertifiedStaff" parameterType="String"
		resultType="java.util.Map">
		select s.branch_seq, u.name
		from staffs s, users u
		where
		staff_id=#{userId}
		and join_date is not null
		and leave_date is null
		and
		s.staff_id=u.user_id
	</select>

	<update id="setPw">
		update users
		set pw=#{newPw}
		where user_id=#{userId}
	</update>

	<update id="setUserInfo"
		parameterType="com.matrix.spring.user.UserDTO">
		update users
		set
		email=#{emailAccount}||'@'||#{emailDomain},
		address_city=#{addressCity}, address_gu=#{addressGu},
		address_dong=#{addressDong}, phone_num=#{phoneNum},
		profile_photo=#{profilePhoto}
		where user_id=#{userId}
	</update>

	<update id="setProfilePhoto">
		update users set
		profile_photo=#{newProfilePhoto}
		where user_id=#{userId}
	</update>

	<update id="removeUser">
		update users set status=0
		where user_id=#{userId} and
		pw=#{pw}
	</update>
</mapper>